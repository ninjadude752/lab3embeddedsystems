;
; Lab3.asm
;
; Created: 2/28/2023 12:42:02 PM
; Author : Xinyi Yuan
;

; configure PC0, PC1 as input for RPG channel a and channel b
cbi DDRC, 1			; channel a
cbi DDRC, 0			; channel b
; configure PB0 as input for pushbutton

; output pins for 7 segment display
sbi DDRB, 3
sbi DDRB, 2
sbi DDRB, 1
cbi DDRB, 0 ;set PB0 input (pin 8) (to upper left on button A)

 
.equ count = 0xff1                          ; assign a 16-bit value to symbol "count"
.equ fourth_count = 0xff1


.equ disp0 = 0x3F
.equ disp1 = 0x6
.equ disp2 = 0x5B
.equ disp3 = 0x4F
.equ disp4 = 0x66
.equ disp5 = 0x6D
.equ disp6 = 0x7C
.equ disp7 = 0x7
.equ disp8 = 0x7F
.equ disp9 = 0x6F
.equ dispFlash = 0x80 

ldi R16, 0x00
ldi R21, 0x00
ldi R18, disp8
; Replace with your application code

start:
	rcall display
	rjmp start

display: ; backup used registers on stack
	push R19
	push R18
	push R20
	push R17
	in R17, SREG
	push R17
	ldi R17, 8 ; loop --> test all 8 bits
loop:
    rol R18
    BRCS set_ser_in_1 ; branch if Carry is set; put code here to set SER to 0
	cbi PORTB,3
	rjmp end



set_ser_in_1:
               sbi PORTB,3
end:
               sbi PORTB,2
               cbi PORTB,2
; put code here to generate SRCLK pulse...
               dec R17
               brne loop
               ; put code here to generate RCLK pulse
               sbi PORTB,1
               cbi PORTB,1
               ; restore registers from stack
               pop R17
               out SREG, R17
               pop R17
               pop R20
               pop R18
               pop R19
               ret 

pollRPG:
	rcall readRPG

; read all 4 rpg "phase" into R16
readRPG:
	in R16, PINC
	andi R16, 0x03
	lsl R16
	lsl R16
	mov R21, R16
	in R16
	andi R16, 0x03
	or R16, R21
	lsl R16
	lsl R16
	mov R21, 16
	in R16
	andi R16, 0x03
	or R16, R21
	lsl R16
	lsl R16
	mov R21, 16
	in R16
	andi R16, 0x03
	or R16, R21
	lsl R16
	lsl R16
	ret


count_to_digital:
               cpi R16, 0x00
               breq check_0
               cpi R16, 0x01
               breq check_1
               cpi R16, 0x02
               breq check_2
               cpi R16, 0x03
               breq check_3
               cpi R16, 0x04
               breq check_4
               cpi R16, 0x05
               breq check_5
               cpi R16, 0x06
               breq check_6
               cpi R16, 0x07
               breq check_7
               cpi R16, 0x08
               breq check_8
               cpi R16, 0x09
               breq check_9
               cpi r16, 9
			   brge start

check_0:
	clr R18
	ldi R18, disp0
	rjmp start
midway2:
	rjmp start
               check_1:

                              clr R18
                              ldi R18, disp1
                              cpi R23, 1
                              ;breq loop2
                              cpi R23,0
                              ;breq midway

               check_2:

                              clr R18
                              ldi R18, disp2
                              cpi R23, 1
                              ;breq loop2
                              cpi R23,0
                              ;breq midway2

               check_3:

                              clr R18
                              ldi R18, disp3
                              cpi R23, 1
                              ;breq loop2
                              cpi R23,0
                              ;breq midway2
                              ;rjmp start

               check_4:

                              clr R18
                              ldi R18, disp4
                              cpi R23, 1
                              ;breq loop2
                              cpi R23,0
                              ;breq midway2
                              ;rjmp start
               check_5:
                              clr R18
                              ldi R18, disp5
                              cpi R23, 1
                              ;breq loop2
                              cpi R23,0
                              ;breq midway2
                              ;rjmp start
               check_6:
                              clr R18
                              ldi R18, disp6
                              cpi R23, 1
                              ;breq loop2
                              cpi R23,0
                              ;breq midway2

                              ;rjmp start

               check_7:
                              clr R18
                              ldi R18, disp7
                              cpi R23, 1
                              ;breq loop2
                              cpi R23,0
                              ;breq midway2
                              ;rjmp start

               check_8:
                              clr R18
                              ldi R18, disp8
                              cpi R23, 1
                              ;breq loop2
                              cpi R23,0
                              ;breq midway2
                              ;rjmp start
               check_9:
                              clr R18
                              ldi R18, disp9
                              cpi R23, 1
                              ;breq loop2
                              cpi R23,0
                              ;breq midway2
                              ;rjmp start

 



 
